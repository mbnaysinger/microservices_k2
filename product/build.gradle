plugins {
   id 'java'
   id 'org.springframework.boot' version '3.3.1'
   id 'io.spring.dependency-management' version '1.1.5'
   id 'com.gorylenko.gradle-git-properties' version '2.4.1'
   id 'com.diffplug.spotless' version '6.25.0'
}

group = 'br.org.fiergs'
version = "1.0.0"

java {
   toolchain {
     languageVersion = JavaLanguageVersion.of(21)
   }
}

spotless {
   lineEndings 'UNIX'
   java {
      eclipse().configFile(rootProject.file('eclipse-formatter.xml'))
   }
   yaml {
      target '**/*.yaml', '**/*.yml'
      prettier().config([
         'parser': 'yaml',
         'tabWidth': 3,
         'useTabs': false
      ])   
   }
}

repositories {
   mavenLocal()
   maven {
      url 'https://srvnexus.sistemafiergs.com.br/repository/maven-public/'
      metadataSources {
         mavenPom() //use maven pom
         artifact() //look directly for the artifact
         ignoreGradleMetadataRedirection() //it fixes the issue actually
      }
   }
   mavenCentral()
}

springBoot {
   buildInfo()
}

ext {
   set('springCloudVersion', "2023.0.2")
   set('ojdbcVersion', "11.2.0")
   set('springdocVersion', "2.6.0")
   set('jasyptVersion', "3.0.5")
   set('fiergsCommonsVersion', "1.0.7") 
}

configurations {
   compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencyManagement {
   imports {
     mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
   }
}

dependencies {
   // Spring Boot Starters
   implementation("org.springframework.boot:spring-boot-starter-web")
   implementation("org.springframework.boot:spring-boot-starter-validation")   
   implementation("org.springframework.boot:spring-boot-starter-data-jpa")
   implementation("org.springframework.boot:spring-boot-starter-security")
   implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")

   // Spring Cloud
   implementation("org.springframework.cloud:spring-cloud-starter-config")
   
   // Spring Liquibase
   implementation("org.liquibase:liquibase-core")
   
   // Database Drivers
   runtimeOnly("com.mysql:mysql-connector-j")
   
   // FIERGS Common Model
   implementation("br.org.fiergs:fiergs-common-model:${fiergsCommonsVersion}")
 

   // Documentation
   implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}")
   
   // Encryption
   implementation("com.github.ulisesbocchio:jasypt-spring-boot-starter:${jasyptVersion}")

   // Test dependencies  
   testImplementation("org.springframework.boot:spring-boot-starter-test") {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
   }

   testImplementation("org.springframework.boot:spring-boot-test-autoconfigure")
   testImplementation("org.springframework.security:spring-security-test")
   testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
   testRuntimeOnly("com.h2database:h2") 

   // DependÃªncias adicionais de teste
   testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

test {
   useJUnitPlatform()
}

tasks.withType(JavaCompile) {
   options.encoding = 'UTF-8'
}